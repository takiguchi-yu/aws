service: sls-sample

custom: 
  # Initial setting value.
  const:
    DYNAMO_DB_TABLE_NAME: newWorld2 
    PROVIDER_ROLE: sls-sample-lambda
    FUNCTION_EVENTS_S3_BUCKET: work-s3-bucket-upload-dayo2
  # AWS Local
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
  s3:
    host: 0.0.0.0
    port: 8001
    directory: ./s3tmp

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-1
  #role: arn:aws:iam::887277492962:role/${self:custom.const.PROVIDER_ROLE}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:Scan'
      Resource: '*'

package:
  exclude:
    - testdata/**
    - node_modules/**
    - migrations/**
    - .dynamodb/**
    - s3tmp/**
    - .eslintrc.js

functions:
  hello:
    handler: handler.hello
    events:
      - s3:
          bucket: ${self:custom.const.FUNCTION_EVENTS_S3_BUCKET}
          event: s3:ObjectCreated:*
      - s3:
          bucket: ${self:custom.const.FUNCTION_EVENTS_S3_BUCKET}
          event: s3:ObjectRemoved:*
    environment:
      TZ: Asia/Tokyo

plugins:
  - serverless-dynamodb-local
  - serverless-s3-local
resources:
  Resources:
    DynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.const.DYNAMO_DB_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: "S"
        KeySchema:
          - AttributeName: key
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
